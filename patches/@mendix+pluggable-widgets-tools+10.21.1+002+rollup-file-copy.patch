diff --git a/node_modules/@mendix/pluggable-widgets-tools/configs/rollup-plugin-collect-dependencies.mjs b/node_modules/@mendix/pluggable-widgets-toolsconfigs/rollup-plugin-collect-dependencies.mjs
index 2d0b5bfac7f1a1482bc1a222cba3e52b0339cc79..44ab7f4aa30abc0ba52672ea3e717f4401d00ed5 100644
--- a/node_modules/@mendix/pluggable-widgets-tools/configs/rollup-plugin-collect-dependencies.mjs
+++ b/node_modules/@mendix/pluggable-widgets-tools/configs/rollup-plugin-collect-dependencies.mjs
@@ -2,9 +2,8 @@
 
 import fg from "fast-glob";
 import fsExtra from "fs-extra";
-import { existsSync, readFileSync, writeFileSync } from "fs";
+import { existsSync, readFileSync, writeFileSync, cpSync } from "fs";
 import { dirname, join, parse } from "path";
-import copy from "recursive-copy";
 import { promisify } from "util";
 import resolve from "resolve";
 import _ from "lodash";
@@ -171,15 +174,34 @@ async function copyJsModule(moduleSourcePath, to) {
     if (existsSync(to)) {
         return;
     }
-    return promisify(copy)(moduleSourcePath, to, {
-        filter: [
-            "**/*.*",
-            LICENSE_GLOB,
-            "!**/{android,ios,windows,mac,jest,github,gradle,__*__,docs,jest,example*}/**/*",
-            "!**/*.{config,setup}.*",
-            "!**/*.{podspec,flow}"
-        ]
-    });
+    
+    try {
+        cpSync(moduleSourcePath, to, {
+            recursive: true,
+            filter: (src, dest) => {
+                const relativePath = src.replace(moduleSourcePath, '').replace(/^[\\/]/, '');
+                
+                // Skip certain directories
+                if (relativePath.match(/[\\/](android|ios|windows|mac|jest|github|gradle|__.*__|docs|example.*)[\\/]/)) {
+                    return false;
+                }
+                
+                // Skip certain file types
+                if (relativePath.match(/\.(config|setup)\.|\.podspec$|\.flow$/)) {
+                    return false;
+                }
+                
+                // Include LICENSE files
+                if (relativePath.match(/license/i)) {
+                    return true;
+                }
+                
+                return true;
+            }
+        });
+    } catch (error) {
+        throw error;
+    }
 }
 
 function getModuleName(modulePath) {